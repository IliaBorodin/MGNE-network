<UserControl x:Class="SNN.Views.NetworkConfigurationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SNN.Views"
             xmlns:viewmodels="clr-namespace:SNN.ViewModels"
             xmlns:other="clr-namespace:SNN.Other"
             d:DataContext="{d:DesignInstance Type=viewmodels:NetworkConfigurationViewModel}"
             mc:Ignorable="d" 
             d:Height="900"
             d:Width="1600"            
             >


    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/SNN;component/Styles/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <!-- Other specific resources for this UserControl can be added here -->
            <other:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <other:BoolToStringConverter x:Key="strconverter"/>
        </ResourceDictionary>

    </UserControl.Resources>

    <Grid Background="{DynamicResource PrimaryBlueColor}">
        <Border CornerRadius="10"
            Background="{DynamicResource PrimaryTextColor}"
            Padding="30"
            VerticalAlignment="Center"
            HorizontalAlignment="Center">
            <TabControl Width="1200"
                    Height="600"
                    Style="{DynamicResource TabControlStyle}">
                <TabItem Header="Настройки сети" Style="{DynamicResource TabItemStyle}">
                    <Grid>
                        <StackPanel Style="{DynamicResource TabItemStackPanelStyle}">


                            <!-- Поля ввода -->
                            <StackPanel Margin="5">
                                <TextBlock Text="p - Пороговое значение мембранного потенциала:" Style="{DynamicResource TextStyle}"/>
                                <TextBox x:Name="PValueTextBox" Text="{Binding P , UpdateSourceTrigger=LostFocus}"/>
                            </StackPanel>

                            <StackPanel Margin="5">
                                <TextBlock Text="r - Равновесное значение мембранного потенциала:" Style="{DynamicResource TextStyle}"/>
                                <TextBox x:Name="RValueTextBox" Text="{Binding R , UpdateSourceTrigger=LostFocus}"/>
                            </StackPanel>

                            <StackPanel Margin="5">
                                <TextBlock Text="alpha - Скоростной параметр" Style="{DynamicResource TextStyle}"/>
                                <TextBox x:Name="AlphaValueTextBox"
                                         Text="{Binding Alpha , UpdateSourceTrigger=LostFocus}"
                                         
                                         />
                            </StackPanel>

                            <StackPanel Margin="5">
                                <TextBlock Text="T - продолжительность периода рефрактерности" Style="{DynamicResource TextStyle}"/>
                                <TextBox x:Name="TValueTextBox" Text="{Binding Tr, UpdateSourceTrigger=LostFocus}"/>
                            </StackPanel>
                            <StackPanel Margin="5" Visibility="{Binding VisibleQ, Converter={StaticResource BoolToVisibilityConverter}}">
                                <TextBlock Text="q - внешнее воздействие в нулевой момент времени" Style="{DynamicResource TextStyle}"/>
                                <TextBox x:Name="QValueTextBox" Text="{Binding External , UpdateSourceTrigger=LostFocus}"/>
                            </StackPanel>

                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Топология сети" Style="{DynamicResource TabItemStyle}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.70*"></ColumnDefinition>
                            <ColumnDefinition Width="0.30*"></ColumnDefinition>
                            
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Margin="0,0,10,0">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.80*"/>
                                <RowDefinition Height="0.20*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <local:NetworkTopologyView
                                    DataContext="{Binding}"/>
                            </Grid>
                            <Border Grid.Row="1" CornerRadius="10" Background="#0FA3B1">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Button Content="Добавить элемент" Margin="5"  Style="{DynamicResource ProButtonStyle}" Command="{Binding CreateNeuronCommand}"/>
                                    <Button Content="Сделать сеть полносвязной" Margin="5"  Style="{DynamicResource ProButtonStyle}" Command="{Binding FullyConnectedNetworkCommand}"/>
                                </StackPanel>
                            </Border>
                           
                        </Grid>

                        <Border Grid.Column="1" CornerRadius="10" Background="#0FA3B1">
                                                
                            <StackPanel>
                                <StackPanel Visibility="{Binding IsTab1Visible, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <local:NeuronConfigView
                                        DataContext="{Binding SelectedNeuron}"
                                         NeuronDeleteCommand="{Binding DataContext.DeleteNeuronCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                         WeightCreateCommand="{Binding DataContext.CreateWeightCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                         ActivateForExternalCommand ="{Binding DataContext.AddQValueParameterCommand,RelativeSource={RelativeSource AncestorType=UserControl}}"
                                         DeactivateForExternalCommand ="{Binding DataContext.DeleteQValueParameterCommand,RelativeSource={RelativeSource AncestorType=UserControl}}"
                                         ParameterQValue ="{Binding DataContext.VisibleQ,RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                </StackPanel>
                                <StackPanel Visibility="{Binding IsTab2Visible, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <local:WeightConfigView
                                        DataContext="{Binding SelectedWeight}"
                                        WeightDeleteCommand="{Binding DataContext.DeleteWeightCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                </StackPanel>
                            </StackPanel>

                        </Border>
                        
                    </Grid>
                </TabItem>
                <TabItem Header="Матрица весов" Style="{DynamicResource TabItemStyle}" Visibility="Collapsed" >
                    <Grid>
                        <local:WeightMatrixView
                            DataContext="{Binding WeightMatrix}"/>
                    </Grid>
                </TabItem>

                <TabItem Header="Итог" Style="{DynamicResource TabItemStyle}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!-- For the top middle StackPanel -->
                            <RowDefinition Height="*"/>
                            <!-- For the rest of the content -->
                        </Grid.RowDefinitions>

                        <!-- Top middle StackPanel -->
                        <StackPanel Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <TextBlock Style="{DynamicResource TextStyle}" Text="{Binding VisibleQ, Converter={StaticResource strconverter}}"/>
                        </StackPanel>

                        <!-- Main content StackPanel -->
                        <StackPanel Grid.Row="1" Style="{DynamicResource TabItemStackPanelStyle}">
                            <StackPanel>
                                <TextBlock Style="{DynamicResource TextStyle}">                           
                <Run Text="p - Пороговое значение мембранного потенциала: "/>
                <Run Text="{Binding P, StringFormat={}{0:F}}"/>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Style="{DynamicResource TextStyle}">
                <Run Text="r - Равновесное значение мембранного потенциала: "/>
                <Run Text="{Binding R, StringFormat={}{0:F}}"/>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Style="{DynamicResource TextStyle}">
                <Run Text="alpha - Скоростной параметр: "/>
                <Run Text="{Binding Alpha, StringFormat={}{0:F}}"/>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Style="{DynamicResource TextStyle}">
                <Run Text="T - продолжительность периода рефрактерности: "/>
                <Run Text="{Binding Tr, StringFormat={}{0:F}}"/>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Style="{DynamicResource TextStyle}">
                <Run Text="Количество элементов в сети: "/>
                <Run Text="{Binding Neurons.Count, Mode=OneWay}"/>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Style="{DynamicResource TextStyle}">
                <Run Text="Количество связей в сети: "/>
                <Run Text="{Binding Weights.Count, Mode=OneWay}"/>
                                </TextBlock>
                            </StackPanel>
                      
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Button Content="Старт" Command="{Binding CreateNetworkCommand}"  CommandParameter="{Binding}" Style="{DynamicResource ProButtonStyle}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>

                </TabItem>
            </TabControl>
        </Border>
    </Grid>






</UserControl>
