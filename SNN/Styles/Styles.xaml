<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="PrimaryBlueColor" Color="#86c4be"/>
    <SolidColorBrush x:Key="SecundaryBlueColor" Color="#EFF2FF"/>

    <SolidColorBrush x:Key="PrimaryTextColor" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="SecundaryTextColor" Color="#BBC1D1"/>

    <SolidColorBrush x:Key="PrimaryGrayColor" Color="#C0C9EA"/>

    <Color x:Key="RadioButton.Telegram.DisabledColor">LightGray</Color>
    <Color x:Key="RadioButton.Telegram.ActiveColor">#FF4EB3EE</Color>
    <SolidColorBrush x:Key="RadioButton.Telegram.DisabledBrush" Color="{DynamicResource RadioButton.Telegram.DisabledColor}" />
    <SolidColorBrush x:Key="RadioButton.Telegram.ActiveBrush" Color="{DynamicResource RadioButton.Telegram.ActiveColor}" />

    <Style x:Key="TabItemStyle" TargetType="TabItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource SecundaryTextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="10 6"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="border"
                          CornerRadius="5"
                          Background="{TemplateBinding Background}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          BorderBrush="{TemplateBinding BorderBrush}"/>
                        <ContentPresenter x:Name="contentPresenter"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    SnapsToDevicePixels="True"
                                    RecognizesAccessKey="True"
                                    ContentSource="Header"
                                    Margin="{TemplateBinding Padding}"
                                    Focusable="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource SecundaryBlueColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryGrayColor}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabControlStyle" TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource SecundaryBlueColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel Grid.Row="0"
                            Background="Transparent"
                            IsItemsHost="True"
                            HorizontalAlignment="Left"/>
                        <Border Grid.Row="1"
                          CornerRadius="5"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          Background="{TemplateBinding Background}">
                            <ContentPresenter ContentSource="SelectedContent"
                                        SnapsToDevicePixels="True"
                                        Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemStackPanelStyle" TargetType="StackPanel">
        <Setter Property="Margin" Value="20"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="TextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Poppins"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="12"/>

    </Style>

    <Style x:Key="ProButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource TertiaryWhiteColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBlackColor}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="12 6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" CornerRadius="20"
                        Background="{TemplateBinding Background}"
                        Width="{TemplateBinding Width}"
                        
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      RecognizesAccessKey="True"/>
                        <!--<Border.Effect>
                        <DropShadowEffect ShadowDepth=".5" Direction="0"
                                          Opacity=".3"/>
                    </Border.Effect>-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="CornerRadius" Value="21"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NeuronEllipseStyle" TargetType="{x:Type Ellipse}">
        <Setter Property="Cursor" Value="Arrow"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NeuronEllipseStyle2" TargetType="{x:Type Ellipse}">
        <Setter Property="Cursor" Value="Arrow"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <DataTrigger Binding="{Binding ReadyForGraph}" Value="True">
                <Setter Property="Stroke" Value="Red"/>
                <Setter Property="StrokeThickness" Value="2"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WeightLineStyle" TargetType="{x:Type Line}">
        <Setter Property="Cursor" Value="Arrow"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TelegramRadioButton" TargetType="RadioButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <BulletDecorator Margin="-5">
                        <BulletDecorator.Bullet>
                            <Grid Margin="1,5,-23,-27" Background="Transparent">
                                <Ellipse
                             Name="EllipseMain"
                             Grid.Row="0"
                             Grid.Column="0"
                             Stroke="{StaticResource RadioButton.Telegram.ActiveBrush}"
                             StrokeThickness="2" />
                                <Ellipse
                             Name="CheckMark"
                             Width="Auto"
                             Margin="6"
                             Fill="{StaticResource RadioButton.Telegram.ActiveBrush}"
                             Opacity="1" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                     Margin="5,0,0,0"
                     VerticalAlignment="Center"
                     RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                     Storyboard.TargetName="CheckMark"
                                     Storyboard.TargetProperty="Opacity"
                                     To="6"
                                     Duration="0:0:0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ThicknessAnimation
                                     Storyboard.TargetName="CheckMark"
                                     Storyboard.TargetProperty="Margin"
                                     To="6"
                                     Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ThicknessAnimation
                                     Storyboard.TargetName="CheckMark"
                                     Storyboard.TargetProperty="Margin"
                                     To="11"
                                     Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ThicknessAnimation
                                     Storyboard.TargetName="CheckMark"
                                     Storyboard.TargetProperty="Margin"
                                     To="6"
                                     Duration="0:0:0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsFocused" Value="True">
                     <Setter TargetName="EllipseMain" Property="Stroke" Value="{StaticResource RadioButton.Telegram.ActiveBrush}" />
                 </Trigger>
                 <Trigger Property="IsFocused" Value="False">
                     <Setter TargetName="EllipseMain" Property="Stroke" Value="{StaticResource RadioButton.Telegram.ActiveBrush}" />
                 </Trigger>-->
                        <Trigger Property="RadioButton.IsEnabled" Value="False">
                            <Setter TargetName="EllipseMain" Property="Stroke" Value="{StaticResource RadioButton.Telegram.DisabledBrush}" />
                            <Setter TargetName="CheckMark" Property="Fill" Value="{StaticResource RadioButton.Telegram.DisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>